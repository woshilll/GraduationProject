<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.graduation.commons.mapper.NewsMapper">
    <resultMap id="BaseResultMap" type="com.yang.graduation.commons.domain.News">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="content_html" jdbcType="VARCHAR" property="contentHtml"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="post_time" jdbcType="TIMESTAMP" property="postTime"/>
        <result column="like_count" jdbcType="INTEGER" property="likeCount"/>
        <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="audit" jdbcType="VARCHAR" property="audit"/>
    </resultMap>

    <select id="count" resultType="java.lang.Integer">
        select count(*) from news
        <where>
            <if test="title != null and title != ''">
                AND title LIKE concat ('%',#{title},'%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="start != null and start != ''">
                and post_time &gt; #{start}
            </if>
            <if test="end != null and end != ''">
                and post_time &lt; #{end}
            </if>
        </where>
    </select>
    <select id="page" resultType="com.yang.graduation.commons.domain.NewsParam">
        select news.id,
        title,
        content,
        content_html as contentHtml,
        image,
        post_time as postTime,
        like_count as likeCount,
        comment_count as commentCount,
        category_id as categoryId,
        user_id as userId,
        u.name as authorName,
        news.status,
        is_delete as isDelete,
        audit,
        news_category.name as categoryName
        from news, news_category, user u
        <where>
            category_id = news_category.id
            and
            user_id = u.id
            <if test="title != null and title != ''">
                AND title LIKE concat ('%',#{title},'%')
            </if>
            <if test="status != null and status != ''">
                AND news.status = #{status}
            </if>
            <if test="start != null and start != ''">
                and post_time &gt; #{start}
            </if>
            <if test="end != null and end != ''">
                and post_time &lt; #{end}
            </if>
        </where>
        limit #{page}, #{limit}
    </select>
    <select id="least4" resultType="com.yang.graduation.commons.domain.News">
    select id,
       title,
       content,
       image,
       post_time as postTime,
       like_count         as likeCount,
       comment_count as commentCount,
       category_id as categoryId
        from news
        where is_delete = 0
        and status = 1
        order by post_time desc
        limit 4
    </select>
    <select id="likeMost4" resultType="com.yang.graduation.commons.domain.NewsParam">
      select news.id,
       title,
       content,
       image,
       post_time          as postTime,
       u.name             as authorName,
       news_category.name as categoryName,
       like_count         as likeCount,
       comment_count as commentCount,
       category_id as categoryId,
       news.user_id as userId,
       nick_name as nickName,
       user_icon as userIcon,
       talk as talk,
       u.banned as authorStatus
from news,
     news_category,
     user u,
     news_comment nc,
     news_like nl
where news.user_id = u.id
  and news.category_id = news_category.id
  and is_delete = 0
  and news.status = 1
  and nl.news_id = news.id
group by news.id
order by count(nl.id) desc
limit 4

  </select>
    <select id="commentMost2" resultType="com.yang.graduation.commons.domain.NewsParam">
select news.id,
       title,
       content,
       image,
       post_time          as postTime,
       u.name             as authorName,
       count(nc.id) as commentCount,
       like_count         as likeCount,
       news_category.name as categoryName,
       category_id as categoryId,
       news.user_id as userId,
       nick_name as nickName,
       user_icon as userIcon,
       talk as talk,
       u.banned as authorStatus
from news,
     news_category,
     user u,
     news_comment nc
where news.user_id = u.id
  and news.category_id = news_category.id
  and is_delete = 0
  and news.status = 1
  and nc.status = 0
  and nc.news_id = news.id
group by news.id
order by count(nc.id)  desc
limit 2;
    </select>
    <select id="random5" resultType="com.yang.graduation.commons.domain.NewsParam">
        select news.id,
               title,
               content,
               image,
               post_time          as postTime,
               u.name             as authorName,
               comment_count      as commentCount,
               like_count         as likeCount,
               news_category.name as categoryName,
               category_id as categoryId
        from news,
             news_category,
             user u
        where news.user_id = u.id
          and news.category_id = news_category.id
          and is_delete = 0
          and news.status = 1
        order by rand()
        limit 5
    </select>
    <select id="adminPost4" resultType="com.yang.graduation.commons.domain.NewsParam">
        select news.id,
               title,
               content,
               image,
               post_time          as postTime,
               u.name             as authorName,
               comment_count      as commentCount,
               like_count         as likeCount,
               news_category.name as categoryName,
               category_id as categoryId,
               user_id as userId,
               nick_name as nickName,
               user_icon as userIcon,
               talk as talk,
               u.banned as authorStatus
        from news,
             news_category,
             user u
        where news.user_id = u.id
          and news.category_id = news_category.id
          and is_delete = 0
          and news.status = 1
          and news.user_id = '88888888'
        order by post_time desc
        limit 7
    </select>
    <select id="getNewsByCategory" resultType="com.yang.graduation.commons.domain.NewsParam">
        select news.id,
               title,
               content,
               image,
               post_time          as postTime,
               u.name             as authorName,
               comment_count      as commentCount,
               like_count         as likeCount,
               user_id as userId,
               nick_name as nickName,
               user_icon as userIcon,
               talk as talk,
               u.banned as authorStatus
        from news,
             news_category,
             user u
        where news.user_id = u.id
          and news.category_id = news_category.id
          and is_delete = 0
          and news.status = 1
          and category_id = #{categoryId}
        order by post_time desc
    </select>
    <select id="search" resultType="com.yang.graduation.commons.domain.NewsParam">
select news.id,
       title,
       content,
       image,
       post_time          as postTime,
       u.name             as authorName,
       comment_count      as commentCount,
       like_count         as likeCount,
       category_id        as categoryId,
       news_category.name as categoryName,
       user_id as userId,
               nick_name as nickName,
               user_icon as userIcon,
               talk as talk,
               u.banned as authorStatus
from news,
     news_category,
     user u
where news.user_id = u.id
  and news.category_id = news_category.id
  and is_delete = 0
  and news.status = 1
  and (
      title like concat('%',#{title},'%')
      or  content like concat('%',#{title},'%')
      )
order by post_time desc
    </select>
    <select id="getLikeMost3ByUserId" resultType="com.yang.graduation.commons.domain.News">
        select id, title
        from news
        where user_id = #{id}
        and status = 1
        and is_delete = 0
        order by post_time desc
        limit 3
    </select>
    <select id="getCommentMostByUserId" resultType="com.yang.graduation.commons.domain.News">
        select n.id, n.title
        from news n, news_comment c
        where n.id = c.news_id
        and n.user_id = #{id}
        and n.status = 1
        and n.is_delete = 0
        and c.status = 0
        group by n.id
        order by count(c.id) desc
        limit 1
    </select>
    <select id="getLikeMostByUserId" resultType="com.yang.graduation.commons.domain.News">
        select n.id, n.title
        from news n, news_like l
        where n.id = l.news_id
        and n.user_id = #{id}
        and n.status = 1
        and n.is_delete = 0
        group by n.id
        order by count(l.id) desc
        limit 1
    </select>
    <select id="selectOneByNew" resultType="com.yang.graduation.commons.domain.News">
        select n.id, n.title
        from news n
        where n.status = 1
        and n.is_delete = 0
        and n.user_id = #{id}
        order by post_time desc
        limit 1
    </select>
    <select id="suggest4" resultType="com.yang.graduation.commons.domain.NewsParam">
        select news.id,
               title,
               content,
               image,
               post_time          as postTime,
               u.name             as authorName,
               comment_count      as commentCount,
               like_count         as likeCount,
               news_category.name as categoryName,
               category_id as categoryId,
               user_id as userId,
               nick_name as nickName,
               user_icon as userIcon,
               talk as talk,
               u.banned as authorStatus
        from news,
             news_category,
             user u
        where news.user_id = u.id
          and news.category_id = news_category.id
          and is_delete = 0
          and news.status = 1
          and news.category_id = 1
        order by post_time desc
        limit 4
    </select>
</mapper>