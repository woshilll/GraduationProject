<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.graduation.commons.mapper.NewsCategoryMapper">
    <resultMap id="BaseResultMap" type="com.yang.graduation.commons.domain.NewsCategory">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated"/>
    </resultMap>
    <select id="categoryNewsCount"
            resultType="com.yang.graduation.commons.domain.analyze.CategoryNewsCountParam">
      select news_category.name as categoryName, count(*) as newsCount
      from news_category, news
      where news.category_id = news_category.id
      group by news.category_id
    </select>
    <select id="categoryCommentAndLikeCount"
            resultType="com.yang.graduation.commons.domain.analyze.CommentAndLikeParam">
        select news_category.name as categoryName,
        sum(comment_count) as commentCount, sum(like_count) as likeCount
        from news_category, news
        where news.category_id = news_category.id
        group by news.category_id
    </select>
    <select id="categoryNewsCount2"
            resultType="com.yang.graduation.commons.domain.analyze.CategoryNewsCountParam">
        select news_category.id as categoryId,news_category.name as categoryName ,count(t.category_id) as newsCount
from news_category left join
    (select * from news where news.status = 1 and news.is_delete = 0) t
    on t.category_id = news_category.id
group by news_category.id
order by news_category.id
    </select>
</mapper>